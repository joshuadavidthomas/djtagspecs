name: test

on:
  pull_request:
  push:
    branches: [main]
  workflow_call:

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

permissions: {}

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e
        with:
          enable-cache: true

      - id: set-matrix
        run: |
          uv run nox --session "gha_matrix"

  test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: generate-matrix
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e
        with:
          enable-cache: true

      - name: Run tests
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          uv run nox --session "tests(python='${{ env.PYTHON_VERSION }}')"

  tests:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: OK
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Fail
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  types:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e
        with:
          enable-cache: true

      - name: Run type checks
        run: |
          uv run nox --session "types"

  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e
        with:
          enable-cache: true

      - name: Generate code coverage
        run: |
          uv run nox --session "coverage"
